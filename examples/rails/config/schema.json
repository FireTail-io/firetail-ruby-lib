{
  "openapi": "3.0.0",
  "info": {
    "title": "api-test",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "dev"
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "summary": "Returns all posts",
        "operationId": "findPosts",
        "responses": {
          "200": {
            "description": "correct response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "properties": {
                    "title": {
                      "type": "string"
                   },
	           "content": {
		     "type": "string"
		    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correct response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}" : {
      "get": {
        "summary": "Returns a post by ID",
        "description": "Returns a post based on a single ID",
        "operationId": "findPostByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
           }
           },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a post by ID",
        "description": "deletes a single post based on the ID supplied",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "post deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/comments" : {
      "get": {
        "summary": "Returns a list of comments for the post",
        "description": "Returns comments for a post",
        "operationId": "findCommentsByPostId",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "comments by postId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comments response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/NamedComment"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewComment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correct response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": ["MySecurityMechanism"]
      }
    },
    "/posts/{postId}/comments/{id}" : {
      "get": {
        "summary": "Returns a list of comments for the post",
        "description": "Returns comments for a post",
        "operationId": "findCommentsByPostId",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "comments by postId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "comments by id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comments response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "$ref": "#/components/schemas/NamedComment"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a comment of a post by ID",
        "description": "deletes a single post based on the ID supplied",
        "operationId": "deletePost",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of comment to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "comment deleted"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "MySecurityMechanism": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "NewPost": {
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post"
          },
          "content": {
            "type": "string",
            "description": "Content of the post"
          }
        }
      },
      "Comment": {
        "allOf": [
          {     
            "$ref": "#/components/schemas/Comment"
          },      
          {       
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64",
                "description": "Unique id of the comment"
              }
            }
          }
        ]
      },
      "NamedPost": {
        "required": [
          "id",
          "title"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Unique id of the post"
          },
          "title": {
            "type": "string",
            "description": "Title of the post"
          }
        }
      },
      "NamedComment": {
        "required": [
          "message"
        ],
        "additionalProperties": false,
        "properties": {
          "postId": {
            "type": "integer",
            "format": "int64",
            "description": "Unique id of the post"
          },
          "message": {
            "type": "string",
            "description": "comment message"
          }
        }
      },
      "NewPost": {
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post"
          },
          "content": {
            "type": "string",
            "description": "Content of the post"
          }
        }
      },
      "NewComment": {
        "type": "object",
        "required": [
          "message"
        ], 
        "properties": {
          "message": {
            "type": "string",
            "description": "Comment message"
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    }
  }
}
